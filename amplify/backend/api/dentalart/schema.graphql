# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type StaffRoster @model @auth(rules: [{ allow: public }]) {
  id: ID!
  staffID:ID!
  start_date: AWSDate
  end_date: AWSDate
  on_duty: Boolean
  staff: Staff @belongsTo(fields: ["staffID"])
}

type Message @model @auth(rules: [{ allow: public }]) {
  id: ID!
  sender_id: ID!
  receiver_id: ID!
  message: String!
  created_at: AWSDateTime!
  staff: [Staff] @manyToMany(relationName: "StaffMessages")
}

type Task @model @auth(rules: [{ allow: public }]) {
  id: ID!
  title: String
  date_created: AWSDate
  date_due: AWSDate
  details: String
  staff: [Staff] @manyToMany(relationName: "StaffTasks")
}

type Patient @model @auth(rules: [{ allow: public }]) {
  id: ID!
  first_name: String
  last_name: String
  email: AWSEmail
  phone_number: AWSPhone
  date_of_birth: AWSDate
  gender: String
  appointments: [Appointment] @manyToMany(relationName: "PatientAppointments")
}

enum StaffRoleEnum {
  DOCTOR
  RECEPTIONIST
  NURSE
  NURSEAID
  ASSISTANT
}

type Staff @model @auth(rules: [{ allow: public }]) {
  id: ID!
  first_name: String
  last_name: String
  email: AWSEmail
  username: String
  phone_number: AWSPhone
  role: StaffRoleEnum
  appointments: [Appointment] @hasMany(fields: ["id"])
  tasks: [Task] @manyToMany(relationName: "StaffTasks")
  messages: [Message] @manyToMany(relationName: "StaffMessages")
  roster: StaffRoster @hasOne(fields: ["id"])
}

enum AppointmentStatusEnum {
  DONE
  PENDING
  MISSED
  RESCHEDULED
}

type Appointment @model @auth(rules: [{ allow: public }]) {
  id: ID!
  appointment_date: AWSDate
  created_at: AWSDateTime
  start_time: AWSTime
  end_time: AWSTime
  status: AppointmentStatusEnum
  assigned_to: String
  patients: [Patient] @manyToMany(relationName: "PatientAppointments")
}
